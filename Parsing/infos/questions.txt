why did the quotes flag of delay didnt need to 
be as the same as the len of what scrapped instead
to be incremented only by one ? in contrast to delay of strings ?

Master@Mindv1.0> 'ls||'
flag_sync_sc -> 0
flag_sync_string -> 0
index -> 0
****************************
flag_sync_sc -> 6
flag_sync_string -> 0
index -> 1
****************************
flag_sync_sc -> 6
flag_sync_string -> 0
index -> 2
****************************
flag_sync_sc -> 6
flag_sync_string -> 0
index -> 3
****************************
flag_sync_sc -> 8
flag_sync_string -> 0
index -> 4
****************************
flag_sync_sc -> 9
flag_sync_string -> 0
index -> 5
****************************
identity> 'ls||'
ID-> S_QUOTE
****************
identity> ||
ID-> OR_ID
****************
identity> |
ID-> PIPE
****************

if u increment the delay as long as the len scrapped, it does not work
yet it works in this case 
'ls'|||
flag_sync_sc -> 0
flag_sync_string -> 0
index -> 0
****************************
flag_sync_sc -> 4
flag_sync_string -> 0
index -> 1
****************************
flag_sync_sc -> 4
flag_sync_string -> 0
index -> 2
****************************
flag_sync_sc -> 4
flag_sync_string -> 0
index -> 3
****************************
flag_sync_sc -> 4
flag_sync_string -> 0
index -> 4
****************************
flag_sync_sc -> 6
flag_sync_string -> 0
index -> 5
****************************
flag_sync_sc -> 6
flag_sync_string -> 0
index -> 6
****************************
identity> 'ls'
ID-> S_QUOTE
****************
identity> ||
ID-> OR_ID
****************
identity> |
ID-> PIPE
****************
why??

what happen when u send the linked list to the function identity_scrapping
only as one pointer?